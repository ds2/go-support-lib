// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        v3.21.9
// source: sysinfo/types.proto

package sysinfo

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type IpAddressType int32

const (
	IpAddressType_UNKNOWN_IPADDR_TYPE IpAddressType = 0
	IpAddressType_IPv4                IpAddressType = 1
	IpAddressType_IPv6                IpAddressType = 2
)

// Enum value maps for IpAddressType.
var (
	IpAddressType_name = map[int32]string{
		0: "UNKNOWN_IPADDR_TYPE",
		1: "IPv4",
		2: "IPv6",
	}
	IpAddressType_value = map[string]int32{
		"UNKNOWN_IPADDR_TYPE": 0,
		"IPv4":                1,
		"IPv6":                2,
	}
)

func (x IpAddressType) Enum() *IpAddressType {
	p := new(IpAddressType)
	*p = x
	return p
}

func (x IpAddressType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (IpAddressType) Descriptor() protoreflect.EnumDescriptor {
	return file_sysinfo_types_proto_enumTypes[0].Descriptor()
}

func (IpAddressType) Type() protoreflect.EnumType {
	return &file_sysinfo_types_proto_enumTypes[0]
}

func (x IpAddressType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use IpAddressType.Descriptor instead.
func (IpAddressType) EnumDescriptor() ([]byte, []int) {
	return file_sysinfo_types_proto_rawDescGZIP(), []int{0}
}

type NetworkInterfaceType int32

const (
	NetworkInterfaceType_UNKNOWN  NetworkInterfaceType = 0
	NetworkInterfaceType_ETHERNET NetworkInterfaceType = 1
	NetworkInterfaceType_WIRELESS NetworkInterfaceType = 2
)

// Enum value maps for NetworkInterfaceType.
var (
	NetworkInterfaceType_name = map[int32]string{
		0: "UNKNOWN",
		1: "ETHERNET",
		2: "WIRELESS",
	}
	NetworkInterfaceType_value = map[string]int32{
		"UNKNOWN":  0,
		"ETHERNET": 1,
		"WIRELESS": 2,
	}
)

func (x NetworkInterfaceType) Enum() *NetworkInterfaceType {
	p := new(NetworkInterfaceType)
	*p = x
	return p
}

func (x NetworkInterfaceType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (NetworkInterfaceType) Descriptor() protoreflect.EnumDescriptor {
	return file_sysinfo_types_proto_enumTypes[1].Descriptor()
}

func (NetworkInterfaceType) Type() protoreflect.EnumType {
	return &file_sysinfo_types_proto_enumTypes[1]
}

func (x NetworkInterfaceType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use NetworkInterfaceType.Descriptor instead.
func (NetworkInterfaceType) EnumDescriptor() ([]byte, []int) {
	return file_sysinfo_types_proto_rawDescGZIP(), []int{1}
}

type PartitionInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MountPath string `protobuf:"bytes,1,opt,name=MountPath,proto3" json:"MountPath,omitempty"`
	Size      uint64 `protobuf:"varint,2,opt,name=size,proto3" json:"size,omitempty"`
	Free      uint64 `protobuf:"varint,3,opt,name=free,proto3" json:"free,omitempty"`
	FsType    string `protobuf:"bytes,4,opt,name=fsType,proto3" json:"fsType,omitempty"`
	Device    string `protobuf:"bytes,5,opt,name=device,proto3" json:"device,omitempty"`
}

func (x *PartitionInfo) Reset() {
	*x = PartitionInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sysinfo_types_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PartitionInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PartitionInfo) ProtoMessage() {}

func (x *PartitionInfo) ProtoReflect() protoreflect.Message {
	mi := &file_sysinfo_types_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PartitionInfo.ProtoReflect.Descriptor instead.
func (*PartitionInfo) Descriptor() ([]byte, []int) {
	return file_sysinfo_types_proto_rawDescGZIP(), []int{0}
}

func (x *PartitionInfo) GetMountPath() string {
	if x != nil {
		return x.MountPath
	}
	return ""
}

func (x *PartitionInfo) GetSize() uint64 {
	if x != nil {
		return x.Size
	}
	return 0
}

func (x *PartitionInfo) GetFree() uint64 {
	if x != nil {
		return x.Free
	}
	return 0
}

func (x *PartitionInfo) GetFsType() string {
	if x != nil {
		return x.FsType
	}
	return ""
}

func (x *PartitionInfo) GetDevice() string {
	if x != nil {
		return x.Device
	}
	return ""
}

type IpAddress struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Address string        `protobuf:"bytes,1,opt,name=address,proto3" json:"address,omitempty"`
	Type    IpAddressType `protobuf:"varint,2,opt,name=type,proto3,enum=sysinfo.IpAddressType" json:"type,omitempty"`
}

func (x *IpAddress) Reset() {
	*x = IpAddress{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sysinfo_types_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IpAddress) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IpAddress) ProtoMessage() {}

func (x *IpAddress) ProtoReflect() protoreflect.Message {
	mi := &file_sysinfo_types_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IpAddress.ProtoReflect.Descriptor instead.
func (*IpAddress) Descriptor() ([]byte, []int) {
	return file_sysinfo_types_proto_rawDescGZIP(), []int{1}
}

func (x *IpAddress) GetAddress() string {
	if x != nil {
		return x.Address
	}
	return ""
}

func (x *IpAddress) GetType() IpAddressType {
	if x != nil {
		return x.Type
	}
	return IpAddressType_UNKNOWN_IPADDR_TYPE
}

type NetworkInterfaceData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name       string               `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	DeviceName string               `protobuf:"bytes,2,opt,name=deviceName,proto3" json:"deviceName,omitempty"`
	Type       NetworkInterfaceType `protobuf:"varint,3,opt,name=type,proto3,enum=sysinfo.NetworkInterfaceType" json:"type,omitempty"`
	HwAddr     string               `protobuf:"bytes,4,opt,name=hwAddr,proto3" json:"hwAddr,omitempty"`
	Mtu        uint32               `protobuf:"varint,5,opt,name=mtu,proto3" json:"mtu,omitempty"`
	Address    []*IpAddress         `protobuf:"bytes,6,rep,name=address,proto3" json:"address,omitempty"`
}

func (x *NetworkInterfaceData) Reset() {
	*x = NetworkInterfaceData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sysinfo_types_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NetworkInterfaceData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NetworkInterfaceData) ProtoMessage() {}

func (x *NetworkInterfaceData) ProtoReflect() protoreflect.Message {
	mi := &file_sysinfo_types_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NetworkInterfaceData.ProtoReflect.Descriptor instead.
func (*NetworkInterfaceData) Descriptor() ([]byte, []int) {
	return file_sysinfo_types_proto_rawDescGZIP(), []int{2}
}

func (x *NetworkInterfaceData) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *NetworkInterfaceData) GetDeviceName() string {
	if x != nil {
		return x.DeviceName
	}
	return ""
}

func (x *NetworkInterfaceData) GetType() NetworkInterfaceType {
	if x != nil {
		return x.Type
	}
	return NetworkInterfaceType_UNKNOWN
}

func (x *NetworkInterfaceData) GetHwAddr() string {
	if x != nil {
		return x.HwAddr
	}
	return ""
}

func (x *NetworkInterfaceData) GetMtu() uint32 {
	if x != nil {
		return x.Mtu
	}
	return 0
}

func (x *NetworkInterfaceData) GetAddress() []*IpAddress {
	if x != nil {
		return x.Address
	}
	return nil
}

type HostInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	HostName    string           `protobuf:"bytes,1,opt,name=HostName,proto3" json:"HostName,omitempty"`
	OsName      string           `protobuf:"bytes,2,opt,name=osName,proto3" json:"osName,omitempty"`
	OsVersion   string           `protobuf:"bytes,3,opt,name=osVersion,proto3" json:"osVersion,omitempty"`
	NumCores    uint32           `protobuf:"varint,4,opt,name=numCores,proto3" json:"numCores,omitempty"`
	FileSystems []*PartitionInfo `protobuf:"bytes,5,rep,name=fileSystems,proto3" json:"fileSystems,omitempty"`
}

func (x *HostInfo) Reset() {
	*x = HostInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sysinfo_types_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HostInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HostInfo) ProtoMessage() {}

func (x *HostInfo) ProtoReflect() protoreflect.Message {
	mi := &file_sysinfo_types_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HostInfo.ProtoReflect.Descriptor instead.
func (*HostInfo) Descriptor() ([]byte, []int) {
	return file_sysinfo_types_proto_rawDescGZIP(), []int{3}
}

func (x *HostInfo) GetHostName() string {
	if x != nil {
		return x.HostName
	}
	return ""
}

func (x *HostInfo) GetOsName() string {
	if x != nil {
		return x.OsName
	}
	return ""
}

func (x *HostInfo) GetOsVersion() string {
	if x != nil {
		return x.OsVersion
	}
	return ""
}

func (x *HostInfo) GetNumCores() uint32 {
	if x != nil {
		return x.NumCores
	}
	return 0
}

func (x *HostInfo) GetFileSystems() []*PartitionInfo {
	if x != nil {
		return x.FileSystems
	}
	return nil
}

type ProcessDetails struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProcessId uint64 `protobuf:"varint,1,opt,name=processId,proto3" json:"processId,omitempty"`
	Path      string `protobuf:"bytes,2,opt,name=path,proto3" json:"path,omitempty"`
}

func (x *ProcessDetails) Reset() {
	*x = ProcessDetails{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sysinfo_types_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProcessDetails) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProcessDetails) ProtoMessage() {}

func (x *ProcessDetails) ProtoReflect() protoreflect.Message {
	mi := &file_sysinfo_types_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProcessDetails.ProtoReflect.Descriptor instead.
func (*ProcessDetails) Descriptor() ([]byte, []int) {
	return file_sysinfo_types_proto_rawDescGZIP(), []int{4}
}

func (x *ProcessDetails) GetProcessId() uint64 {
	if x != nil {
		return x.ProcessId
	}
	return 0
}

func (x *ProcessDetails) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

type HealthInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TotalMemory     uint64  `protobuf:"varint,1,opt,name=totalMemory,proto3" json:"totalMemory,omitempty"`
	AvailableMemory uint64  `protobuf:"varint,2,opt,name=availableMemory,proto3" json:"availableMemory,omitempty"`
	CpuLoad1        float64 `protobuf:"fixed64,3,opt,name=cpuLoad1,proto3" json:"cpuLoad1,omitempty"`
	CpuLoad5        float64 `protobuf:"fixed64,4,opt,name=cpuLoad5,proto3" json:"cpuLoad5,omitempty"`
	CpuLoad15       float64 `protobuf:"fixed64,5,opt,name=cpuLoad15,proto3" json:"cpuLoad15,omitempty"`
}

func (x *HealthInfo) Reset() {
	*x = HealthInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sysinfo_types_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HealthInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HealthInfo) ProtoMessage() {}

func (x *HealthInfo) ProtoReflect() protoreflect.Message {
	mi := &file_sysinfo_types_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HealthInfo.ProtoReflect.Descriptor instead.
func (*HealthInfo) Descriptor() ([]byte, []int) {
	return file_sysinfo_types_proto_rawDescGZIP(), []int{5}
}

func (x *HealthInfo) GetTotalMemory() uint64 {
	if x != nil {
		return x.TotalMemory
	}
	return 0
}

func (x *HealthInfo) GetAvailableMemory() uint64 {
	if x != nil {
		return x.AvailableMemory
	}
	return 0
}

func (x *HealthInfo) GetCpuLoad1() float64 {
	if x != nil {
		return x.CpuLoad1
	}
	return 0
}

func (x *HealthInfo) GetCpuLoad5() float64 {
	if x != nil {
		return x.CpuLoad5
	}
	return 0
}

func (x *HealthInfo) GetCpuLoad15() float64 {
	if x != nil {
		return x.CpuLoad15
	}
	return 0
}

var File_sysinfo_types_proto protoreflect.FileDescriptor

var file_sysinfo_types_proto_rawDesc = []byte{
	0x0a, 0x13, 0x73, 0x79, 0x73, 0x69, 0x6e, 0x66, 0x6f, 0x2f, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x07, 0x73, 0x79, 0x73, 0x69, 0x6e, 0x66, 0x6f, 0x22, 0x85,
	0x01, 0x0a, 0x0d, 0x50, 0x61, 0x72, 0x74, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x6e, 0x66, 0x6f,
	0x12, 0x1c, 0x0a, 0x09, 0x4d, 0x6f, 0x75, 0x6e, 0x74, 0x50, 0x61, 0x74, 0x68, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x09, 0x4d, 0x6f, 0x75, 0x6e, 0x74, 0x50, 0x61, 0x74, 0x68, 0x12, 0x12,
	0x0a, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x04, 0x73, 0x69,
	0x7a, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x66, 0x72, 0x65, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04,
	0x52, 0x04, 0x66, 0x72, 0x65, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x66, 0x73, 0x54, 0x79, 0x70, 0x65,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x66, 0x73, 0x54, 0x79, 0x70, 0x65, 0x12, 0x16,
	0x0a, 0x06, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06,
	0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x22, 0x51, 0x0a, 0x09, 0x49, 0x70, 0x41, 0x64, 0x64, 0x72,
	0x65, 0x73, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x2a, 0x0a,
	0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x16, 0x2e, 0x73, 0x79,
	0x73, 0x69, 0x6e, 0x66, 0x6f, 0x2e, 0x49, 0x70, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x54,
	0x79, 0x70, 0x65, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x22, 0xd5, 0x01, 0x0a, 0x14, 0x4e, 0x65,
	0x74, 0x77, 0x6f, 0x72, 0x6b, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x44, 0x61,
	0x74, 0x61, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65,
	0x4e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x64, 0x65, 0x76, 0x69,
	0x63, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x31, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x0e, 0x32, 0x1d, 0x2e, 0x73, 0x79, 0x73, 0x69, 0x6e, 0x66, 0x6f, 0x2e, 0x4e,
	0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x54,
	0x79, 0x70, 0x65, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x68, 0x77, 0x41,
	0x64, 0x64, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x68, 0x77, 0x41, 0x64, 0x64,
	0x72, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x74, 0x75, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x03,
	0x6d, 0x74, 0x75, 0x12, 0x2c, 0x0a, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x06,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x73, 0x79, 0x73, 0x69, 0x6e, 0x66, 0x6f, 0x2e, 0x49,
	0x70, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x52, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73,
	0x73, 0x22, 0xb2, 0x01, 0x0a, 0x08, 0x48, 0x6f, 0x73, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x1a,
	0x0a, 0x08, 0x48, 0x6f, 0x73, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x48, 0x6f, 0x73, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x6f, 0x73,
	0x4e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6f, 0x73, 0x4e, 0x61,
	0x6d, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x6f, 0x73, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6f, 0x73, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e,
	0x12, 0x1a, 0x0a, 0x08, 0x6e, 0x75, 0x6d, 0x43, 0x6f, 0x72, 0x65, 0x73, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x08, 0x6e, 0x75, 0x6d, 0x43, 0x6f, 0x72, 0x65, 0x73, 0x12, 0x38, 0x0a, 0x0b,
	0x66, 0x69, 0x6c, 0x65, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x16, 0x2e, 0x73, 0x79, 0x73, 0x69, 0x6e, 0x66, 0x6f, 0x2e, 0x50, 0x61, 0x72, 0x74,
	0x69, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x0b, 0x66, 0x69, 0x6c, 0x65, 0x53,
	0x79, 0x73, 0x74, 0x65, 0x6d, 0x73, 0x22, 0x42, 0x0a, 0x0e, 0x50, 0x72, 0x6f, 0x63, 0x65, 0x73,
	0x73, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x12, 0x1c, 0x0a, 0x09, 0x70, 0x72, 0x6f, 0x63,
	0x65, 0x73, 0x73, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x09, 0x70, 0x72, 0x6f,
	0x63, 0x65, 0x73, 0x73, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x74, 0x68, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x70, 0x61, 0x74, 0x68, 0x22, 0xae, 0x01, 0x0a, 0x0a, 0x48,
	0x65, 0x61, 0x6c, 0x74, 0x68, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x20, 0x0a, 0x0b, 0x74, 0x6f, 0x74,
	0x61, 0x6c, 0x4d, 0x65, 0x6d, 0x6f, 0x72, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0b,
	0x74, 0x6f, 0x74, 0x61, 0x6c, 0x4d, 0x65, 0x6d, 0x6f, 0x72, 0x79, 0x12, 0x28, 0x0a, 0x0f, 0x61,
	0x76, 0x61, 0x69, 0x6c, 0x61, 0x62, 0x6c, 0x65, 0x4d, 0x65, 0x6d, 0x6f, 0x72, 0x79, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x04, 0x52, 0x0f, 0x61, 0x76, 0x61, 0x69, 0x6c, 0x61, 0x62, 0x6c, 0x65, 0x4d,
	0x65, 0x6d, 0x6f, 0x72, 0x79, 0x12, 0x1a, 0x0a, 0x08, 0x63, 0x70, 0x75, 0x4c, 0x6f, 0x61, 0x64,
	0x31, 0x18, 0x03, 0x20, 0x01, 0x28, 0x01, 0x52, 0x08, 0x63, 0x70, 0x75, 0x4c, 0x6f, 0x61, 0x64,
	0x31, 0x12, 0x1a, 0x0a, 0x08, 0x63, 0x70, 0x75, 0x4c, 0x6f, 0x61, 0x64, 0x35, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x01, 0x52, 0x08, 0x63, 0x70, 0x75, 0x4c, 0x6f, 0x61, 0x64, 0x35, 0x12, 0x1c, 0x0a,
	0x09, 0x63, 0x70, 0x75, 0x4c, 0x6f, 0x61, 0x64, 0x31, 0x35, 0x18, 0x05, 0x20, 0x01, 0x28, 0x01,
	0x52, 0x09, 0x63, 0x70, 0x75, 0x4c, 0x6f, 0x61, 0x64, 0x31, 0x35, 0x2a, 0x3c, 0x0a, 0x0d, 0x49,
	0x70, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x54, 0x79, 0x70, 0x65, 0x12, 0x17, 0x0a, 0x13,
	0x55, 0x4e, 0x4b, 0x4e, 0x4f, 0x57, 0x4e, 0x5f, 0x49, 0x50, 0x41, 0x44, 0x44, 0x52, 0x5f, 0x54,
	0x59, 0x50, 0x45, 0x10, 0x00, 0x12, 0x08, 0x0a, 0x04, 0x49, 0x50, 0x76, 0x34, 0x10, 0x01, 0x12,
	0x08, 0x0a, 0x04, 0x49, 0x50, 0x76, 0x36, 0x10, 0x02, 0x2a, 0x3f, 0x0a, 0x14, 0x4e, 0x65, 0x74,
	0x77, 0x6f, 0x72, 0x6b, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x54, 0x79, 0x70,
	0x65, 0x12, 0x0b, 0x0a, 0x07, 0x55, 0x4e, 0x4b, 0x4e, 0x4f, 0x57, 0x4e, 0x10, 0x00, 0x12, 0x0c,
	0x0a, 0x08, 0x45, 0x54, 0x48, 0x45, 0x52, 0x4e, 0x45, 0x54, 0x10, 0x01, 0x12, 0x0c, 0x0a, 0x08,
	0x57, 0x49, 0x52, 0x45, 0x4c, 0x45, 0x53, 0x53, 0x10, 0x02, 0x42, 0x0a, 0x5a, 0x08, 0x2f, 0x73,
	0x79, 0x73, 0x69, 0x6e, 0x66, 0x6f, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_sysinfo_types_proto_rawDescOnce sync.Once
	file_sysinfo_types_proto_rawDescData = file_sysinfo_types_proto_rawDesc
)

func file_sysinfo_types_proto_rawDescGZIP() []byte {
	file_sysinfo_types_proto_rawDescOnce.Do(func() {
		file_sysinfo_types_proto_rawDescData = protoimpl.X.CompressGZIP(file_sysinfo_types_proto_rawDescData)
	})
	return file_sysinfo_types_proto_rawDescData
}

var file_sysinfo_types_proto_enumTypes = make([]protoimpl.EnumInfo, 2)
var file_sysinfo_types_proto_msgTypes = make([]protoimpl.MessageInfo, 6)
var file_sysinfo_types_proto_goTypes = []interface{}{
	(IpAddressType)(0),           // 0: sysinfo.IpAddressType
	(NetworkInterfaceType)(0),    // 1: sysinfo.NetworkInterfaceType
	(*PartitionInfo)(nil),        // 2: sysinfo.PartitionInfo
	(*IpAddress)(nil),            // 3: sysinfo.IpAddress
	(*NetworkInterfaceData)(nil), // 4: sysinfo.NetworkInterfaceData
	(*HostInfo)(nil),             // 5: sysinfo.HostInfo
	(*ProcessDetails)(nil),       // 6: sysinfo.ProcessDetails
	(*HealthInfo)(nil),           // 7: sysinfo.HealthInfo
}
var file_sysinfo_types_proto_depIdxs = []int32{
	0, // 0: sysinfo.IpAddress.type:type_name -> sysinfo.IpAddressType
	1, // 1: sysinfo.NetworkInterfaceData.type:type_name -> sysinfo.NetworkInterfaceType
	3, // 2: sysinfo.NetworkInterfaceData.address:type_name -> sysinfo.IpAddress
	2, // 3: sysinfo.HostInfo.fileSystems:type_name -> sysinfo.PartitionInfo
	4, // [4:4] is the sub-list for method output_type
	4, // [4:4] is the sub-list for method input_type
	4, // [4:4] is the sub-list for extension type_name
	4, // [4:4] is the sub-list for extension extendee
	0, // [0:4] is the sub-list for field type_name
}

func init() { file_sysinfo_types_proto_init() }
func file_sysinfo_types_proto_init() {
	if File_sysinfo_types_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_sysinfo_types_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PartitionInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sysinfo_types_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IpAddress); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sysinfo_types_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NetworkInterfaceData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sysinfo_types_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HostInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sysinfo_types_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProcessDetails); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sysinfo_types_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HealthInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_sysinfo_types_proto_rawDesc,
			NumEnums:      2,
			NumMessages:   6,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_sysinfo_types_proto_goTypes,
		DependencyIndexes: file_sysinfo_types_proto_depIdxs,
		EnumInfos:         file_sysinfo_types_proto_enumTypes,
		MessageInfos:      file_sysinfo_types_proto_msgTypes,
	}.Build()
	File_sysinfo_types_proto = out.File
	file_sysinfo_types_proto_rawDesc = nil
	file_sysinfo_types_proto_goTypes = nil
	file_sysinfo_types_proto_depIdxs = nil
}
